use dataverse hackathon;
create type LogDeviceType as closed {
	id: uuid,
    device_id: int64,
    device_type: string,
    device_os: int32,
    device_os: int32,
    log_time: datetime,
    package_name: string,
    application_version: string,
    application_version_id: int64,
    version: string,
    battery: float?,
    back_battery: float?,
    cpu: int32,
    back_cpu: int32,
    memory:int64,
    data_all: int64,
    back_data: int64,
    data_wifi: float?,
    data_mobile: float?,
    crash_count: int32,
    run_time:int64,
    front_run_time: int64,
    code_size: float?,
    data_size: float?,
    cache_size: float?,
    other_size: float?
}

create dataset log_device(LogDeviceType) primary key id autogenerated;

insert into dataset log_device(
for $t in dataset logdata
for $r in dataset devices
where $t.device_id = $r.device_id
return{
    "device_id": $r.device_id,
    "device_type": $r.device_type,
    "device_os": $r.device_os,
    "log_time": $t.log_time,
    "package_name": $t.package_name,
    "application_version": $t.application_version,
    "application_version_id": $t.application_version_id,
    "version": $t.version,
    "battery": $t.battery,
    "back_battery": $t.back_battery,
    "cpu": $t.cpu,
    "back_cpu": $t.back_cpu,
    "memory": $t.memory,
    "data_all": $t.data_all,
    "back_data": $t.back_data,
    "data_wifi": $t.data_wifi,
    "data_mobile": $t.data_mobile,
    "crash_count": $t.crash_count,
    "run_time": $t.run_time,
    "front_run_time": $t.front_run_time,
    "code_size": $t.code_size,
    "data_size": $t.data_size,
    "cache_size": $t.cache_size,
    "other_size": $t.other_size
}
)